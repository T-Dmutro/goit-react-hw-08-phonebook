{"version":3,"file":"static/js/742.ad7213a2.chunk.js","mappings":"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","sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","views/ContactsRoutsView/ContactsRoutsView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Form.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { useAddContactMutation, useFetchContactsQuery } from 'redux/contacts/contactApi';\n\nfunction FormContact({ nameId, numberId }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n const [addContact] = useAddContactMutation(); \n const {data} = useFetchContactsQuery();\n\n  const handelChange = event => {\n    const onName = event.currentTarget.name;\n    const value = event.currentTarget.value;\n\n    switch (onName) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addNewContact = async () => {  \n    const availableContact = await data.some(\n    (contact) => contact.name.trim().toLowerCase().includes(name.toLowerCase()))\n    \n    if (availableContact) {\n      return toast.error(`${name} is already in contacts!`);\n      } else {\n      await addContact({name, number});\n      };\n};\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    addNewContact();\n    reset();\n  };\n\n\n  return (\n  <>\n    <Form onSubmit={handelSubmit}>\n\n      <Form.Group className=\"mb-3\" >\n      <Form.Label htmlFor={nameId}>\n        Name\n        <Form.Control style={styles.input}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handelChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Form.Label>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" >\n      <Form.Label htmlFor={numberId}>\n        Number\n        <PhoneInput\n          type=\"tel\"\n          value={number}\n          name=\"phone\"\n          onChange={setNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Form.Label>\n      </Form.Group>\n\n      <Button variant=\"success\" type=\"submit\">Add contact</Button>\n    </Form>\n      <ToastContainer\n      position=\"top-center\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      theme=\"dark\"\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      />\n  </>\n  );\n};\n\n\nexport default FormContact;\n\nconst styles = {\n  input: {\n      width: '155%',\n      marginTop: '16px',\n  },\n};","import {  useSelector } from \"react-redux\";\nimport { useFetchContactsQuery, useDeleteContactMutation } from 'redux/contacts/contactApi';\nimport { MutatingDots } from  'react-loader-spinner';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst ContactList = () => {\n  const { data = [], isFetching, isError, error } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  const filter = useSelector(state => state.filter);\n\n\n  const mapFilterContacts = data?.filter(({name}) => \n  name.trim().toLowerCase().includes(filter.toLowerCase()));\n\n  const handleDeleteContact = contactId => {\n    deleteContact(contactId);\n  };\n\n  const possibleСonditions =  data  && !isFetching && !isFetching && <h1>{data.name}</h1>;\n  return (\n    <>\n    {possibleСonditions} \n    {isError && toast.error(`${error.data}`)}\n    {isFetching &&  <MutatingDots ariaLabel=\"loading-indicator\" />} \n          <ListGroup >\n          {mapFilterContacts.map(({ name, id, number }) => {\n            return (\n            <ListGroup.Item as=\"li\" key={id} style={styles.container}>\n            <p>\n              {name}: {number}\n            </p>\n            <Button variant=\"danger\" type=\"button\" onClick={() => handleDeleteContact(id)}>\n              Delete\n            </Button>\n          </ListGroup.Item>\n          )}\n          )}\n        </ListGroup>\n   <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        />\n\n    \n    </>\n  );\n};\n\nexport default ContactList;\n\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '5px',\n  },\n};","import styled from '@emotion/styled';\n\nexport const LabelContact = styled.label`\n  cursor: default;\n  display: flex;\n  flex-direction: column;\n  font-weight: 400;\n  font-size: 18px;\n`;\n\nexport const InputContact = {\n  display: 'block',\n  width: '100%',\n  padding: '0.375rem 0.75rem',\n  fontSize: '1rem',\n  fontWeight: '400',\n  lineHeight: '1.5',\n  color: '#212529',\n  backgroundColor: '#fff',\n  backgroundClip: 'padding-box',\n  border: '1px solid #ced4da',\n  appearance: 'none',\n  borderRadius:' 0.25rem',\n  transition: 'border-color .15s ease-in-out,box-shadow .15s ease-in-out',\n}\n\n\n\n\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {DebounceInput} from 'react-debounce-input';\nimport { LabelContact, InputContact } from './Filter.styled';\nimport {changeFilter} from '../../redux/contacts/filterSlice';\n\n\n\nfunction Filter() {\n  const filterValue= useSelector((state) => state.filter.filter);\n  const dispatch = useDispatch();\n\n\n  return (\n    <LabelContact>\n      Пошук контакту за ім'ям\n      <DebounceInput\n      debounceTimeout={false ? -1 : 500}\n      forceNotifyByEnter={true}\n      forceNotifyOnBlur={true}\n      minLength={0}\n      element={\"input\"}\n      style={InputContact}\n      type=\"text\" \n      name=\"filter\" \n      value={filterValue} \n      onChange={(e) => dispatch(changeFilter(e.target.value))}/>\n    </LabelContact>\n  );\n}\n\nexport default Filter;\n","import FormContact from '../../components/Form/index';\nimport ContactList from '../../components/ContactList/index';\nimport Filter from '../../components/Filter/index';\nimport Container from '../../components/GlobalStyle/GlobalStyleConteiner';\n\nconst styles = {\n  form: {\n      maxWidth: 500,\n      margin: 10,\n  },\n};\n\nfunction ContactsRoutsView () {\n  \n    return(\n        <Container>\n        <section title=\"Phonebook\" style={styles.form}>\n          <h1>Телефонна книга</h1>\n          <FormContact/>\n        </section>\n        <section title=\"Contacts\" style={styles.form}>\n          <h2>Контакти</h2>\n          <Filter/>\n          <ContactList/>\n        </section>\n      </Container>\n    )\n}\n\n\nexport default ContactsRoutsView;"],"names":["nameId","numberId","useState","name","setName","number","setNumber","useAddContactMutation","addContact","data","useFetchContactsQuery","addNewContact","some","contact","trim","toLowerCase","includes","toast","onSubmit","event","preventDefault","className","htmlFor","style","styles","input","type","value","onChange","onName","currentTarget","pattern","title","required","Button","variant","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","theme","pauseOnFocusLoss","draggable","pauseOnHover","width","marginTop","isFetching","isError","error","useDeleteContactMutation","deleteContact","filter","useSelector","state","mapFilterContacts","possibleСonditions","ariaLabel","ListGroup","map","id","as","container","onClick","display","justifyContent","alignItems","LabelContact","styled","InputContact","padding","fontSize","fontWeight","lineHeight","color","backgroundColor","backgroundClip","border","appearance","borderRadius","transition","filterValue","dispatch","useDispatch","DebounceInput","debounceTimeout","forceNotifyByEnter","forceNotifyOnBlur","minLength","element","e","changeFilter","target","form","maxWidth","margin"],"sourceRoot":""}